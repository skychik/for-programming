package ru.ifmo.cs.programming.lab6.core;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class HotKeys extends JDialog {
    private JPanel contentPane;
    private JTextArea textArea;
    private Dimension size;

    public HotKeys() {
        size = new Dimension(260, 40);
        setContentPane(contentPane);
        getContentPane().setPreferredSize(size);
        setTextArea();
        setModal(true);
    }

    private void setTextArea() {
        textArea.setText(
                "  Alt+1 - Shows tab with table \n" +
                "  Alt+2 - Shows tab with changing things");
        textArea.setFont(new Font(MainFrame.getFontName(), Font.PLAIN, 12));
    }

    public Dimension getSize() {
        return size;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR INSERT ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setAlignmentX(0.0f);
        panel1.setAlignmentY(0.0f);
        contentPane.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textArea = new JTextArea();
        textArea.setEditable(false);
        panel1.add(textArea, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
